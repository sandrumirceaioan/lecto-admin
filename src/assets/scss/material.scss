// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`

@include mat.core();

// import oth custom theme
@import "./lecto/themes/theme.scss";

// include theme styles each component used
@include mat.all-component-themes($lecto-theme);

.text-primary {
    color: mat.get-color-from-palette($primary);
}

.text-accent {
    color: mat.get-color-from-palette($accent);
}

.text-warn {
    color: mat.get-color-from-palette($warn);
}

.text-success {
    color: mat.get-color-from-palette($success);
}

.text-dark {
    color: mat.get-color-from-palette($dark);
}

.text-white {
    color: mat.get-color-from-palette($white);
}

.text-gray {
    color: #bebebe;
}

.background-primary {
    background: mat.get-color-from-palette($primary);
}

.background-accent {
    background: mat.get-color-from-palette($accent);
}

.background-warn {
    background: mat.get-color-from-palette($warn);
}

.background-success {
    background: mat.get-color-from-palette($success);
}

.background-dark {
    background: mat.get-color-from-palette($dark);
}

/* Here you can add other styles */

.mat-form-field {
    width: 100%;
    display: block;
}

.accent-tooltip {
    background: mat.get-color-from-palette($accent);
}

.primary-tooltip {
    background: mat.get-color-from-palette($primary);
}

.transparent-tooltip {
    background: none !important;
    color: mat.get-color-from-palette($primary) !important;
}

.mat-step-header {
    margin-bottom: 20px !important;
    background-color: #e0e0e0 !important;
}


/* starting with Angular 15 */

.mat-mdc-form-field-error-wrapper, .mat-mdc-form-field-hint-wrapper {
    padding: 0px !important;
    color: #bebebe;
}

.mat-mdc-form-field-required-marker {
    display: none !important;
}

.mat-mdc-cell {
    color: mat.get-color-from-palette($dark);
}

.mat-mdc-header-cell {
    color: mat.get-color-from-palette($primary);
    font-weight: 500;
}

.mat-sort-header-arrow {
    color: mat.get-color-from-palette($primary);
}

.mdc-text-field {
    overflow: inherit !important;
    will-change: unset !important;
}

.mat-vertical-content-container {
    margin: 20px 0px 0px 0px !important;
    border: 0;
    position: relative;
}

.mat-stepper-vertical-line::before {
    display: none !important;
}